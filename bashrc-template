

# CD HISTORY START	by vincemann @ https://github.com/vincemann/cd-history ____________________________________________________________________________________________

# extends functionality of cd:
# saves last visited directories systemwide and let user cd into recently visited dirs
# aliases cd with bashfunction providing additional features

# USAGE
# cd -- 		display recent history and goto selected
# cd -- foo		display recent history results containing word foo and goto selected
# cd -- show 10 only display recent history in terminal
# cd -			goto last directory without saving it again
export DIR_HISTORY="Â§HOME/.dir-history"
export DIR_HIST_AMOUNT_LOGIN=4
export DIR_HIST_AMOUNT=11
export CD_HIST_GUI=


get_dir_history()
{
	dir_hist=`echo $DIR_HISTORY`
	if [ -z "$dir_hist" ]; then
		dir_hist="~/.dir-history"
	fi
	# create history stack if not already there
	if [[ ! -e "$dir_hist" ]]; then
		touch "$dir_hist"
	fi
	echo "$dir_hist"
}

goto_last_dir()
{
	local dir_hist
	dir_hist=$(get_dir_history)
	if [ -s dir_hist ]; then
        # The file is not-empty.
        last_dir=$(cat "$dir_hist" | head -n 1)
        command cd "$last_dir"
	fi
}

cd_func ()
{
	local x2 selected_dir adir index dir_hist
	local -i cnt
	
	selected_dir="$1"
	dir_hist=$(get_dir_history)

	# only show dirs in terminal second arg must be amount
	if [[ -n "$1" ]]; then
		if [[ "$1" == "show" ]]; then
			amount=$2
			if [[ -n "$amount" ]]; then
				amount=$DIR_HIST_AMOUNT
			fi
			cat "$dir_hist" | head -n "$amount"
			# selected_dir=$(show-last-dirs "$CD_HIST_GUI" "" "$amount")
			return 0
		fi
		if [[ "$1" == "-" ]]; then
			goto_last_dir
			return 0
		fi
	fi
	
	# LIST LAST DIRS
	if [[ $1 == "--" ]]; then
		# if arg after -- is present, it is interpreted as must-match-word in path
		matchWord="$2"
		if [[ -n "$matchWord" ]];then
			selected_dir=$(show-last-dirs "$CD_HIST_GUI" "$matchWord" $DIR_HIST_AMOUNT 0)
			# cat -n "$dir_hist" | grep -i "$matchWord" | head -11
		else
			# cat -n "$dir_hist" | head -11
			selected_dir=$(show-last-dirs "$CD_HIST_GUI" "" $DIR_HIST_AMOUNT 0)
		fi
	fi

	
	# LIST ALL DIRS
	# if [[ $1 ==  "---" ]]; then
	# 	cat -n "$dir_hist" | more
	#  	return 0
	# fi
	
	
	# newDir=$1
	# [[ -z $1 ]] && newDir=$HOME
	
	# # extract dir by index and update dir, that gets cd into -> newDir
	# if [[ ${newDir:0:1} == '-' ]]; then
	# 	index=$2
	# 	[[ -z $index ]] && index=1
	# 	adir=`sed "${index}q;d" "$dir_hist"`
	#  	[[ -z $adir ]] && return 1
	#   	newDir=$adir
	#  fi
	 
	 # CONVERT TO ABS PATH
	 selected_dir=`readlink -f "$selected_dir"`
	 command cd "$selected_dir"
	 # if cd failed, return 1 and dont save invalid dir on stack
	 [[ $? -ne 0 ]] && return 1

	 if [[ -z "${selected_dir// }" ]]; then
	 	return 1
	 fi
	 
	 # save dir on stack
	 tmp=`mktemp`
	 echo "$selected_dir" | cat - "$dir_hist" > "$tmp"
	 cat "$tmp" > "$dir_hist"
	 command rm -f "$tmp"
	 
	 # remove duplicate dirs
	 tmp2=`mktemp`
	 awk '!visited[$0]++' "$dir_hist" > "$tmp2"
	 cat "$tmp2" > "$dir_hist"
	 command rm -f "$tmp2"
	 
	 chmod a+rw "$dir_hist"
	 return 0
}

alias cd=cd_func
alias cc='cd show'
alias c='cd --'

# done to work smoothly together with ez-bash 
if [[ -z "$SUDO_BASH_SUBSHELL" ]] ;then
	# show last visited dirs and move to last dir on start of bash
	cd show "$DIR_HIST_AMOUNT_LOGIN"
	goto_last_dir
fi

# CD HISTORY END ____________________________________________________________________________________________

